# with original columns plus newly computed columns
write.csv(cleanData_wide,file="SCIP-MT-study1a_cleanData_wide.csv")
data_long <- cleanData_wide %>%
gather(starts_with("G2"),
starts_with("R3"),
starts_with("R2"),
starts_with("CrB"),
starts_with("R1"),
starts_with("G1"),
starts_with("CrA"),
starts_with("R4"))
G2_data = cleanData_wide %>%
select(contains("G2"))
view(G2_data)
G2_data = cleanData_wide %>%
select(contains("G2_"))
view(G2_data)
G2_data = cleanData_wide %>%
select(subjectNum, contains("G2_"))
view(G2_long)
view(G2_data)
G2_long = gather(G2_data, "trialName", "G2", 2:4)
view(G2_long)
G2_long = gather(G2_data, subjectNum)
view(G2_long)
G2_data_wide = cleanData_wide %>%
select(subjectNum, contains("G2_"))
G2_long = gather(G2_data_wide, trialName, starts_with("G2"))
view(G2_data_wide)
G2_data_wide = cleanData_wide %>%
select(subjectNum, contains("G2_")) %>%
mutate(trialName = "G2")
view(G2_data_wide)
R3_data_wide = cleanData_wide %>%
select(subjectNum, contains("R3_")) %>%
#add value "R3" under new column "trialName"
mutate(trialName = "R3")
R2_data_wide = cleanData_wide %>%
select(subjectNum, contains("R2_")) %>%
#add value "R2" under new column "trialName"
mutate(trialName = "R2")
CrB_data_wide = cleanData_wide %>%
select(subjectNum, contains("CrB_")) %>%
#add value "CrB" under new column "trialName"
mutate(trialName = "CrB")
R1_data_wide = cleanData_wide %>%
select(subjectNum, contains("R1_")) %>%
#add value "R1" under new column "trialName"
mutate(trialName = "R1")
G1_data_wide = cleanData_wide %>%
select(subjectNum, contains("G1_")) %>%
#add value "G1" under new column "trialName"
mutate(trialName = "G1")
CrA_data_wide = cleanData_wide %>%
select(subjectNum, contains("CrA_")) %>%
#add value "CrA" under new column "trialName"
mutate(trialName = "CrA")
R4_data_wide = cleanData_wide %>%
select(subjectNum, contains("R4_")) %>%
#add value "R4" under new column "trialName"
mutate(trialName = "R4")
# subsetting data associated with each trial
G2_data= cleanData_wide %>%
select(subjectNum, contains("G2_")) %>%
#add value "G2" under new column "trialName"
mutate(trialName = "G2")
R3_data= cleanData_wide %>%
select(subjectNum, contains("R3_")) %>%
#add value "R3" under new column "trialName"
mutate(trialName = "R3")
R2_data= cleanData_wide %>%
select(subjectNum, contains("R2_")) %>%
#add value "R2" under new column "trialName"
mutate(trialName = "R2")
CrB_data= cleanData_wide %>%
select(subjectNum, contains("CrB_")) %>%
#add value "CrB" under new column "trialName"
mutate(trialName = "CrB")
R1_data= cleanData_wide %>%
select(subjectNum, contains("R1_")) %>%
#add value "R1" under new column "trialName"
mutate(trialName = "R1")
G1_data= cleanData_wide %>%
select(subjectNum, contains("G1_")) %>%
#add value "G1" under new column "trialName"
mutate(trialName = "G1")
CrA_data= cleanData_wide %>%
select(subjectNum, contains("CrA_")) %>%
#add value "CrA" under new column "trialName"
mutate(trialName = "CrA")
R4_data= cleanData_wide %>%
select(subjectNum, contains("R4_")) %>%
#add value "R4" under new column "trialName"
mutate(trialName = "R4")
# combining these data frames:
cleanData_long = rbind(G2_data, R3_data, R2_data, CrB_data, R1_data, G1_data, CrA_data, R4_data)
View(cleanData_wide)
View(cleanData)
View(G2_data)
View(R1_data)
View(R2_data)
View(R3_data)
View(R4_data)
View(CrB_data)
View(CrA_data)
View(G1_data)
# combining these data frames:
block1Data = merge(x=G2_data, y=R3_data, by = "subjectNum")
View(block1Data)
#(c) Additional tidying:
# (i) further clean up dataframe by selecting just newly created columns (+ subjectNum)
cleanData_wide = rawData_wide %>%
# (ii) convert subjectNum to factor
mutate(subjectNum = factor(subjectNum)) %>%
#(iii) arrange columsn in desired order
select(subjectNum,
contains("G2"),
contains("R3"),
contains("R2"),
contains("CrB"),
contains("R1"),
contains("G1"),
contains("CrA"),
contains("R4"))
head(cleanData_wide)
cleanData_long = cleanData_wide.stack(level =0)
view(cleanData_wide)
cleanData_wide = cleanData_wide %>%
mutate(trialName = if(contains("G2_")){
"G2"
}else if(contains("R3_")){
"R3"
}else if(contains("R2_")){
"R2"
}else if(contains("CrB_")){
"CrB"
}else if(contains("R1_")){
"R1"
}else if(contains("G1_")){
"G1"
}else if(contains("CrA_")){
"CrA"}
else if(contains("R4_")){
"R4"
}
)
rlang::last_error()
#added 9-27-19
install.packages(c("skimr", "visdat", "summarytools", "DT"))
#added 9-27-19
# install.packages(c("skimr", "visdat", "summarytools", "DT"))
library(skimr)
library(visdat)
library(summarytools)
library(DT)
library(summarytools)
View(G1_data)
# subsetting data associated with each trial
G2_data = cleanData_wide %>%
select(subjectNum, contains("G2_")) %>%
#add value "G2" under new column "trialName"
mutate(trialName = "G2") %>%
select(subjectNum, trialName, contains("G2_"))
View(G2_data)
R3_data = cleanData_wide %>%
select(subjectNum, contains("R3_")) %>%
#add value "R3" under new column "trialName"
mutate(trialName = "R3")  %>%
select(subjectNum, trialName, contains("R3_"))
R2_data = cleanData_wide %>%
select(subjectNum, contains("R2_")) %>%
#add value "R2" under new column "trialName"
mutate(trialName = "R2")  %>%
select(subjectNum, trialName, contains("R2_"))
CrB_data = cleanData_wide %>%
select(subjectNum, contains("CrB_")) %>%
#add value "CrB" under new column "trialName"
mutate(trialName = "CrB")  %>%
select(subjectNum, trialName, contains("CrB_"))
R1_data = cleanData_wide %>%
select(subjectNum, contains("R1_")) %>%
#add value "R1" under new column "trialName"
mutate(trialName = "R1")  %>%
select(subjectNum, trialName, contains("R1_"))
G1_data = cleanData_wide %>%
select(subjectNum, contains("G1_")) %>%
#add value "G1" under new column "trialName"
mutate(trialName = "G1")  %>%
select(subjectNum, trialName, contains("G1_"))
CrA_data = cleanData_wide %>%
select(subjectNum, contains("CrA_")) %>%
#add value "CrA" under new column "trialName"
mutate(trialName = "CrA")  %>%
select(subjectNum, trialName, contains("CrA_"))
R4_data = cleanData_wide %>%
select(subjectNum, contains("R4_")) %>%
#add value "R4" under new column "trialName"
mutate(trialName = "R4")  %>%
select(subjectNum, trialName, contains("R4_"))
print(colnames(G2_data))
print(colnames(G2_data)[2])
# rename columns to remove trialName-prefixes
G2_data_renamed = colnames(G2_data)[3:5] <- c("correct","chosen","accuracy")
view(G2_data_renamed)
view(G2_data)
R3_data = cleanData_wide %>%
select(subjectNum, contains("R3_")) %>%
#add value "R3" under new column "trialName"
mutate(trialName = "R3")  %>%
select(subjectNum, trialName, contains("R3_"))
# rename columns to remove trialName-prefixes
colnames(R3_data)[3:5] <- c("correct","chosen","accuracy")
view(R3_data)
View(G2_data)
View(R3_data)
R2_data = cleanData_wide %>%
select(subjectNum, contains("R2_")) %>%
#add value "R2" under new column "trialName"
mutate(trialName = "R2")  %>%
# reordering columns
select(subjectNum, trialName, contains("R2_"))
# rename columns to remove trialName-prefixes
colnames(R2_data)[3:5] <- c("correct","chosen","accuracy")
CrB_data = cleanData_wide %>%
select(subjectNum, contains("CrB_")) %>%
# add value "CrB" under new column "trialName"
mutate(trialName = "CrB")  %>%
# reordering columns
select(subjectNum, trialName, contains("CrB_"))
# rename columns to remove trialName-prefixes
colnames(CrB_data)[3:5] <- c("correct","chosen","accuracy")
R1_data = cleanData_wide %>%
select(subjectNum, contains("R1_")) %>%
#add value "R1" under new column "trialName"
mutate(trialName = "R1")  %>%
# reordering columns
select(subjectNum, trialName, contains("R1_"))
# rename columns to remove trialName-prefixes
colnames(R1_data)[3:5] <- c("correct","chosen","accuracy")
G1_data = cleanData_wide %>%
select(subjectNum, contains("G1_")) %>%
#add value "G1" under new column "trialName"
mutate(trialName = "G1")  %>%
# reordering columns
select(subjectNum, trialName, contains("G1_"))
# rename columns to remove trialName-prefixes
colnames(G1_data)[3:5] <- c("correct","chosen","accuracy")
CrA_data = cleanData_wide %>%
select(subjectNum, contains("CrA_")) %>%
#add value "CrA" under new column "trialName"
mutate(trialName = "CrA")  %>%
# reordering columns
select(subjectNum, trialName, contains("CrA_"))
# rename columns to remove trialName-prefixes
colnames(CrA_data)[3:5] <- c("correct","chosen","accuracy")
R4_data = cleanData_wide %>%
select(subjectNum, contains("R4_")) %>%
#add value "R4" under new column "trialName"
mutate(trialName = "R4")  %>%
# reordering columns
select(subjectNum, trialName, contains("R4_"))
# rename columns to remove trialName-prefixes
colnames(R4_data)[3:5] <- c("correct","chosen","accuracy")
# combining these data frames:
firstTwo = rbind(G2_data,R3_data)
view(firstTwo)
nextTwo_block1 = rbind(R2_data, CrB_data)
firstTwo_block2 = rbind(R1_data, G1_data)
nextTwo_block2 = rbind(CrA_data, R4_data)
block1_data = rbind(firstTwo_block1, nextTwo_block1)
# combining these data frames:
firstTwo_block1 = rbind(G2_data,R3_data)
nextTwo_block1 = rbind(R2_data, CrB_data)
block1_data = rbind(firstTwo_block1, nextTwo_block1)
firstTwo_block2 = rbind(R1_data, G1_data)
nextTwo_block2 = rbind(CrA_data, R4_data)
block2_data = rbind(firstTwo_block2, nextTwo_block2)
longData_ALL = rbind(block1_data,block2_data)
view(longData_ALL)
View(longData_ALL)
# saving tidied up data in long form (finally!)
write.csv(longData_ALL,file="SCIP-MT-study1a_acc-cleanData_long.csv")
install.packages("regex")
library(regex)
install.packages(regex)
library(regex)
knitr::opts_chunk$set(echo = TRUE)
d <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv")) %>%
mutate(G2_correct = "left",
R3_correct = "right",
R2_correct = "right",
CrB_correct = "left",
R1_correct = "right",
G1_correct = "left",
CrA_correct = "right",
R4_correct = "left") %>%
select(-contains("_2")) %>% # drop _2 as that's the right side
gather(variable, value, `G2-PG_1`:R4_correct) %>%
mutate(variable = str_replace(variable, "-", "_")) %>% # deal with naming issue
separate(variable, into = c("trial", "variable")) %>%
mutate(variable = ifelse(variable == "correct", "correct", "chosen")) %>%
spread(variable, value) %>%
mutate(chosen = ifelse(chosen=="On", "left", "right")) %>%
mutate(acc = chosen == correct)
knitr::opts_chunk$set(echo = TRUE)
# install.packages(c("tidyverse","here","dplyer","langcog"))
library(tidyverse)  #note: contains ggplot2, dplyr, tidyr
library(here)
#library(langcog)   --- isn't loading; TODO: find special command to download library
# added 9-27-19 - I
library(stringr) #processing strings
library(compute.es) #for calculating effect sizes
library(lme4)
#library(regex)
#added 9-27-19 - II
# install.packages(c("skimr", "visdat", "summarytools", "DT"))
library(skimr)
library(visdat)
#library(summarytools)  # didn't load -- error saying 'install XQuartz'
library(DT)
d <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv")) %>%
mutate(G2_correct = "left",
R3_correct = "right",
R2_correct = "right",
CrB_correct = "left",
R1_correct = "right",
G1_correct = "left",
CrA_correct = "right",
R4_correct = "left") %>%
select(-contains("_2")) %>% # drop _2 as that's the right side
gather(variable, value, `G2-PG_1`:R4_correct) %>%
mutate(variable = str_replace(variable, "-", "_")) %>% # deal with naming issue
separate(variable, into = c("trial", "variable")) %>%
mutate(variable = ifelse(variable == "correct", "correct", "chosen")) %>%
spread(variable, value) %>%
mutate(chosen = ifelse(chosen=="On", "left", "right")) %>%
mutate(acc = chosen == correct)
d <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv"))
View(d)
d <- d %>%
mutate(G2_correct = "left",
R3_correct = "right",
R2_correct = "right",
CrB_correct = "left",
R1_correct = "right",
G1_correct = "left",
CrA_correct = "right",
R4_correct = "left") %>%
select(-contains("_2")) %>% # drop _2 as that's the right side
gather(variable, value, `G2-PG_1`:R4_correct) %>%
mutate(variable = str_replace(variable, "-", "_")) %>% # deal with naming issue
separate(variable, into = c("trial", "variable")) %>%
mutate(variable = ifelse(variable == "correct", "correct", "chosen")) %>%
spread(variable, value) %>%
mutate(chosen = ifelse(chosen=="On", "left", "right")) %>%
mutate(acc = chosen == correct)
d <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv")) %>%
d <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv")) %>%
R3_correct = "right",
d <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv")) %>%
mutate(G2_correct = "left",
R3_correct = "right",
R2_correct = "right",
CrB_correct = "left",
R1_correct = "right",
G1_correct = "left",
CrA_correct = "right",
R4_correct = "left") %>%
select(-contains("_2")) %>% # drop _2 as that's the right side
gather(variable, value, `G2-PG_1`:R4_correct) %>%
mutate(variable = str_replace(variable, "-", "_")) %>% # deal with naming issue
separate(variable, into = c("trial", "variable")) %>%
mutate(variable = ifelse(variable == "correct", "correct", "chosen")) %>%
spread(variable, value) %>%
mutate(chosen = ifelse(chosen=="On", "left", "right")) %>%
mutate(acc = chosen == correct) %>%
mutate(blockNum = ifelse(trial %in% c("G2","R3","R2","CrB"),1,2))
ms <- d %>%
group_by(trial, subjectNum) %>%
summarise(correct = mean(correct)) %>%
multi_boot_standard(col = "correct")
d <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv")) %>%
mutate(G2_correct = "left",
R3_correct = "right",
R2_correct = "right",
CrB_correct = "left",
R1_correct = "right",
G1_correct = "left",
CrA_correct = "right",
R4_correct = "left") %>%
select(-contains("_2"),-'Recorded Date') %>% # drop _2 as that's the right side
gather(variable, value, `G2-PG_1`:R4_correct) %>%
mutate(variable = str_replace(variable, "-", "_")) %>% # deal with naming issue
separate(variable, into = c("trial", "variable")) %>%
mutate(variable = ifelse(variable == "correct", "correct", "chosen")) %>%
spread(variable, value) %>%
mutate(chosen = ifelse(chosen=="On", "left", "right")) %>%
mutate(acc = chosen == correct) %>%
mutate(blockNum = ifelse(trial %in% c("G2","R3","R2","CrB"),1,2))
ms <- d %>%
group_by(trial, subjectNum) %>%
summarise(correct = mean(correct)) %>%
multi_boot_standard(col = "correct")
devtools::install_github("langcog/langcog")
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("langcog/langcog")
View(d)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)  #note: contains ggplot2, dplyr, tidyr
library(tidyverse)  #note: contains ggplot2, dplyr, tidyr
library(here)
# added 9-27-19 - I
library(stringr) #processing strings
library(compute.es) #for calculating effect sizes
library(lme4)
#added 9-27-19 - II
# install.packages(c("skimr", "visdat", "summarytools", "DT"))
library(skimr)
library(visdat)
library(summarytools)  # didn't load -- error saying 'install XQuartz'
library(DT)
# STEP 1 #
rawData_wide <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv"))
head(rawData_wide)
View(rawData_wide)
d <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv")) %>%
mutate(G2_correct = "left",
R3_correct = "right",
R2_correct = "right",
CrB_correct = "left",
R1_correct = "right",
G1_correct = "left",
CrA_correct = "right",
R4_correct = "left") %>%
select(-contains("_2"),-'Recorded Date') %>% # drop _2 as that's the right side
gather(variable, value, `G2-PG_1`:R4_correct) %>%
mutate(variable = str_replace(variable, "-", "_")) %>% # deal with naming issue
separate(variable, into = c("trial", "variable")) %>%
mutate(variable = ifelse(variable == "correct", "correct", "chosen")) %>%
spread(variable, value) %>%
mutate(chosen = ifelse(chosen=="On", "left", "right")) %>%
mutate(acc = chosen == correct) %>%
mutate(blockNum = ifelse(trial %in% c("G2","R3","R2","CrB"),1,2))
d <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv")) %>%
mutate(G2_correct = "left",
R3_correct = "right",
R2_correct = "right",
CrB_correct = "left",
R1_correct = "right",
G1_correct = "left",
CrA_correct = "right",
R4_correct = "left") %>%
select(-contains("_2"),-'Recorded Date',-'SubjectID') %>% # drop _2 as that's the right side
gather(variable, value, `G2-PG_1`:R4_correct) %>%
mutate(variable = str_replace(variable, "-", "_")) %>% # deal with naming issue
separate(variable, into = c("trial", "variable")) %>%
mutate(variable = ifelse(variable == "correct", "correct", "chosen")) %>%
spread(variable, value) %>%
mutate(chosen = ifelse(chosen=="On", "left", "right")) %>%
mutate(acc = chosen == correct) %>%
mutate(blockNum = ifelse(trial %in% c("G2","R3","R2","CrB"),1,2))
d <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv")) %>%
mutate(G2_correct = "left",
R3_correct = "right",
R2_correct = "right",
CrB_correct = "left",
R1_correct = "right",
G1_correct = "left",
CrA_correct = "right",
R4_correct = "left") %>%
select(-contains("_2"),-'SubjectID') %>% # drop _2 as that's the right side
gather(variable, value, `G2-PG_1`:R4_correct) %>%
mutate(variable = str_replace(variable, "-", "_")) %>% # deal with naming issue
separate(variable, into = c("trial", "variable")) %>%
mutate(variable = ifelse(variable == "correct", "correct", "chosen")) %>%
spread(variable, value) %>%
mutate(chosen = ifelse(chosen=="On", "left", "right")) %>%
mutate(acc = chosen == correct) %>%
mutate(blockNum = ifelse(trial %in% c("G2","R3","R2","CrB"),1,2))
d <- read_csv(here::here("SCIP_adult_study1a_acc-rawData.csv")) %>%
mutate(G2_correct = "left",
R3_correct = "right",
R2_correct = "right",
CrB_correct = "left",
R1_correct = "right",
G1_correct = "left",
CrA_correct = "right",
R4_correct = "left") %>%
select(-contains("_2")) %>% # drop _2 as that's the right side
gather(variable, value, `G2-PG_1`:R4_correct) %>%
mutate(variable = str_replace(variable, "-", "_")) %>% # deal with naming issue
separate(variable, into = c("trial", "variable")) %>%
mutate(variable = ifelse(variable == "correct", "correct", "chosen")) %>%
spread(variable, value) %>%
mutate(chosen = ifelse(chosen=="On", "left", "right")) %>%
mutate(acc = chosen == correct) %>%
mutate(blockNum = ifelse(trial %in% c("G2","R3","R2","CrB"),1,2))
View(d)
ms <- d %>%
group_by(trial, subjectNum) %>%
summarise(correct = mean(correct)) %>%
multi_boot_standard(col = "correct")  #needs langcog package
packageStatus()
install.packages("devtools")
install.packages("devtools")
devtools::install_github("langcog/langcog")
ms <- d %>%
group_by(trial, subjectNum) %>%
summarise(correct = mean(correct)) %>%
multi_boot_standard(col = "correct")  #needs langcog package
