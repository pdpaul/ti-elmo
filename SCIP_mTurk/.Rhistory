knitr::opts_chunk$set(echo = TRUE)
list1_clean %>%
mutate(id = str_c(listNum,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial", values_to = "response", -listNum, -id)
list1_clean %>%
mutate(id = str_c(listNum,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial", values_to = "response", -listNum, -id)
knitr::opts_chunk$set(echo = TRUE)
list1_clean %>%
mutate(id = str_c(listNum,"-",as.character(1:n())))
knitr::opts_chunk$set(echo = TRUE)
list1_clean %>%
mutate(id = str_c(listNum,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial", values_to = "response", cols = c(-listNum, -id))
knitr::opts_chunk$set(echo = TRUE)
list1_clean %>%
mutate(id = str_c(listNum,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial", values_to = "response", cols = c(-listNum, -id)) %>%
separate(trial, by = "-", into = c("trial_name", "jars"))
?separate
knitr::opts_chunk$set(echo = TRUE)
list1_clean %>%
mutate(id = str_c(listNum,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial", values_to = "response", cols = c(-listNum, -id)) %>%
separate(trial, sep = "-", into = c("trial_name", "jars"))
knitr::opts_chunk$set(echo = TRUE)
str_c("list", as.character(1:16), "_clean")
knitr::opts_chunk$set(echo = TRUE)
lists[[1]] <- rawData_list1_wide %>%
select(ends_with("_1")) %>%
mutate(listNum = 1)
lists[[2]] <- rawData_list2_wide %>%
select(ends_with("_1")) %>%
mutate(listNum = 2)
lists[[4]] <- rawData_list4_wide %>%
select(ends_with("_1")) %>%
mutate(listNum = 4)
knitr::opts_chunk$set(echo = TRUE)
lists <- list()
lists[[1]] <- rawData_list1_wide %>%
select(ends_with("_1")) %>%
mutate(listNum = 1)
lists[[2]] <- rawData_list2_wide %>%
select(ends_with("_1")) %>%
mutate(listNum = 2)
lists[[3]] <- rawData_list3_wide %>%
select(ends_with("_1")) %>%
mutate(listNum = 3)
lists[[4]] <- rawData_list4_wide %>%
select(ends_with("_1")) %>%
mutate(listNum = 4)
knitr::opts_chunk$set(echo = TRUE)
data_frame(list = str_c("list", as.character(1:16), "_clean"),
id = 1:n()) %>%
split(.$id) %>%
map_df(function (x) {
df <- lists[[x$id]]
df %>%
mutate(id = str_c(listNum,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-listNum, -id)) %>%
separate(trial, sep = "-", into = c("trial_name", "jars"))
})
data_frame(list = str_c("list", as.character(1:16), "_clean"),
id = 1:n())
knitr::opts_chunk$set(echo = TRUE)
data_frame(list = str_c("list", as.character(1:16), "_clean"),
id = 1:16)
knitr::opts_chunk$set(echo = TRUE)
data_frame(list = str_c("list", as.character(1:16), "_clean"),
id = 1:16) %>%
split(.$id) %>%
map_df(function (x) {
df <- lists[[x$id]]
df %>%
mutate(id = str_c(listNum,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-listNum, -id)) %>%
separate(trial, sep = "-", into = c("trial_name", "jars"))
})
knitr::opts_chunk$set(echo = TRUE)
files <- dir(here("SCIP_1B_data_ANON"), "*.csv")
knitr::opts_chunk$set(echo = TRUE)
files <- dir(here("SCIP_1B_data_ANON"), "*.csv")
files
knitr::opts_chunk$set(echo = TRUE)
files <- dir(here("SCIP_1B_data_ANON"), "*.csv")
data_frame(fname = files,
id = 1:16) %>%
split(.$id) %>%
map_df(function (x) {
read_csv(x$fname) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-listNum, -id)) %>%
separate(trial, sep = "-", into = c("trial_name", "jars"))
})
knitr::opts_chunk$set(echo = TRUE)
files <- dir(here("SCIP_1B_data_ANON"), "*.csv")
data_frame(fname = files,
id = 1:16) %>%
split(.$id) %>%
map_df(function (x) {
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-listNum, -id)) %>%
separate(trial, sep = "-", into = c("trial_name", "jars"))
})
knitr::opts_chunk$set(echo = TRUE)
files <- dir(here("SCIP_1B_data_ANON"), "*.csv")
data_frame(fname = files,
id = 1:16) %>%
split(.$id) %>%
map_df(function (x) {
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trial_name", "jars"))
})
knitr::opts_chunk$set(echo = TRUE)
d <- data_frame(fname = files,
id = 1:16) %>%
split(.$id) %>%
map_df(function (x) {
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trial_name", "jars"))
})
d
knitr::opts_chunk$set(echo = TRUE)
data_frame(fname = files) %>%
mutate(id = 1:n())
split(.$id)
knitr::opts_chunk$set(echo = TRUE)
data_frame(fname = files) %>%
mutate(id = 1:n()) %>%
split(.$id)
files <- dir(here("SCIP_1B_data_ANON"), "*.csv")
d <- data_frame(fname = files) %>%
mutate(id = 1:n()) %>%
split(.$id) %>%
map_df(function (x) {
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trial_name", "jars"))
})
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
key <- read_csv("SCIP_1B_key.csv")
View(key)
d <- data_frame(fname = files) %>%
mutate(id = 1:n()) %>% # adds index to keep track of data frames
split(.$id) %>% # splits into list of data frames
map_df(function (x) {  # defines function to run on each data frame
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trial_name", "jars"))
})
View(d)
knitr::opts_chunk$set(echo = TRUE)
d <- data_frame(fname = files) %>%
mutate(id = 1:n()) %>% # adds index to keep track of data frames
split(.$id) %>% # splits into list of data frames
map_df(function (x) {  # defines function to run on each data frame
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trial_name", "jars")) %>%
mutate(ifelse(response=="On","left","right"))
})
knitr::opts_chunk$set(echo = TRUE)
d <- data_frame(fname = files) %>%
mutate(id = 1:n()) %>% # adds index to keep track of data frames
split(.$id) %>% # splits into list of data frames
map_df(function (x) {  # defines function to run on each data frame
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trial_name", "jars")) %>%
mutate(response = ifelse(response=="On","left",ifelse(response=="Off","right","NA")))
})
View(d)
knitr::opts_chunk$set(echo = TRUE)
d <- data_frame(fname = files) %>%
mutate(id = 1:n()) %>% # adds index to keep track of data frames
split(.$id) %>% # splits into list of data frames
map_df(function (x) {  # defines function to run on each data frame
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trialName", "jars")) %>%
mutate(response = ifelse(response=="On","left",ifelse(response=="Off","right","NA"))) %>%
mutate(trialType = "critical",
trialType = ifelse(str_detect(trial, "G"), "gen", trialType),
trialType = ifelse(str_detect(trial, "R"), "recap", trialType))
})
knitr::opts_chunk$set(echo = TRUE)
d <- data_frame(fname = files) %>%
mutate(id = 1:n()) %>% # adds index to keep track of data frames
split(.$id) %>% # splits into list of data frames
map_df(function (x) {  # defines function to run on each data frame
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trialName", "jars")) %>%
mutate(response = ifelse(response=="On","left",ifelse(response=="Off","right","NA"))) %>%
mutate(trialType = "critical",
trialType = ifelse(str_detect(trialName, "G"), "gen", trialType),
trialType = ifelse(str_detect(trialName, "R"), "recap", trialType))
})
knitr::opts_chunk$set(echo = TRUE)
key <- read_csv("SCIP_1B_key.csv")
View(key)
d <- left_join(d, key) %>%
mutate(correct = response == correct_answer)
knitr::opts_chunk$set(echo = TRUE)
d <- data_frame(fname = files) %>%
mutate(id = 1:n()) %>% # adds index to keep track of data frames
split(.$id) %>% # splits into list of data frames
map_df(function (x) {  # defines function to run on each data frame
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trialName", "jars")) %>%
mutate(response = ifelse(response=="On","left",ifelse(response=="Off","right","NA"))) %>%
str_replace("..-1_..","1") %>% # clean up list num
mutate(trialType = "critical",
trialType = ifelse(str_detect(trialName, "G"), "gen", trialType),
trialType = ifelse(str_detect(trialName, "R"), "recap", trialType))
})
knitr::opts_chunk$set(echo = TRUE)
d <- data_frame(fname = files) %>%
mutate(id = 1:n()) %>% # adds index to keep track of data frames
split(.$id) %>% # splits into list of data frames
map_df(function (x) {  # defines function to run on each data frame
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trialName", "jars")) %>%
mutate(response = ifelse(response=="On","left",ifelse(response=="Off","right","NA"))) %>%
mutate(jars = str_replace("_1","")) %>%     # get rid of _1 suffix in "jars" values
mutate(trialType = "critical",
trialType = ifelse(str_detect(trialName, "G"), "gen", trialType),
trialType = ifelse(str_detect(trialName, "R"), "recap", trialType))
})
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_chunk$set(echo = TRUE)
# edited line below to help with saving plots as .png files;
knitr::opts_chunk$set(echo = TRUE, dev = c('png', 'pdf'),fig.align = 'center')
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(langcog)   #install.packages("devtools"); devtools::install_github("langcog/langcog")
library(Hmisc) # --- could use this for alt. bootstrapping fns
# added 9-27-19 - I
library(stringr) #processing strings
library(compute.es) #for calculating effect sizes
library(lme4)
#library(regex)
#added 9-27-19 - II
# install.packages(c("skimr", "visdat", "summarytools", "DT"))
library(skimr)
library(visdat)
library(summarytools)  # must have XQuartz installed
# getting following error: package ‘summarytools’ was built under R version 3.5.2 couldn't connect to display ":0"system has no X11 capabilities, therefore only ascii graphs will be produced by dfSummary()
library(DT)
library(tidyverse)  #note: contains ggplot2, dplyr, tidyr
library(car)
library(lme4)
files <- dir(here("SCIP_1B_data_ANON"), "*.csv")
d <- data_frame(fname = files) %>%
mutate(id = 1:n()) %>% # adds index to keep track of data frames
split(.$id) %>% # splits into list of data frames
map_df(function (x) {  # defines function to run on each data frame
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trialName", "jars")) %>%
mutate(response = ifelse(response=="On","left",ifelse(response=="Off","right","NA"))) %>%
mutate(trialType = "critical",
trialType = ifelse(str_detect(trialName, "G"), "gen", trialType),
trialType = ifelse(str_detect(trialName, "R"), "recap", trialType))
# Still TODO:
# (a) get rid of "_1" suffix in jars column
# (b) clean up 'list' values to contain just numbers 1-16
# (c) order data by ascending list number (currently out of order)
# (d) assign subjectID to participants following ascending list order
# (d) add coumn with correct values for a given trial given list from key.csv
# (e) add accuracy column (if response = correct, 1, else 0)
})
View(d)
key <- read_csv("SCIP_1B_key.csv")
d <- left_join(d, key) %>%
mutate(correct = response == correct_answer)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(here)
knitr::opts_chunk$set(echo = TRUE)
library(langcog)   #install.packages("devtools"); devtools::install_github("langcog/langcog")
knitr::opts_chunk$set(echo = TRUE)
library(Hmisc) # --- could use this for alt. bootstrapping fns
knitr::opts_chunk$set(echo = TRUE)
# added 9-27-19 - I
library(stringr) #processing strings
knitr::opts_chunk$set(echo = TRUE)
library(compute.es) #for calculating effect sizes
knitr::opts_chunk$set(echo = TRUE)
library(lme4)
knitr::opts_chunk$set(echo = TRUE)
#added 9-27-19 - II
# install.packages(c("skimr", "visdat", "summarytools", "DT"))
library(skimr)
knitr::opts_chunk$set(echo = TRUE)
library(visdat)
knitr::opts_chunk$set(echo = TRUE)
library(summarytools)  # must have XQuartz installed
knitr::opts_chunk$set(echo = TRUE)
# library(summarytools)  # must have XQuartz installed
# getting following error: package ‘summarytools’ was built under R version 3.5.2 couldn't connect to display ":0"system has no X11 capabilities, therefore only ascii graphs will be produced by dfSummary()
library(DT)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)  #note: contains ggplot2, dplyr, tidyr
library(car)
library(lme4)
knitr::opts_chunk$set(echo = TRUE)
library(car)
knitr::opts_chunk$set(echo = TRUE)
files <- dir(here("SCIP_1B_data_ANON"), "*.csv")
d <- data_frame(fname = files) %>%
mutate(id = 1:n()) %>% # adds index to keep track of data frames
split(.$id) %>% # splits into list of data frames
map_df(function (x) {  # defines function to run on each data frame
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trialName", "jars")) %>%
mutate(response = ifelse(response=="On","left",ifelse(response=="Off","right","NA"))) %>%
mutate(trialType = "critical",
trialType = ifelse(str_detect(trialName, "G"), "gen", trialType),
trialType = ifelse(str_detect(trialName, "R"), "recap", trialType))
# Still TODO:
# (0) replace 'G2:purple' value in trialName column with 'G2'
# (a) get rid of "_1" suffix in jars column
# (b) clean up 'list' values to contain just numbers 1-16
# (c) order data by ascending list number (currently out of order)
# (d) assign subjectID to participants following ascending list order
# (d) add coumn with correct values for a given trial given list from key.csv
# (e) add accuracy column (if response = correct, 1, else 0)
})
d
d$trialName
d$jars
d$list
d
unique(d$id)
knitr::opts_chunk$set(echo = TRUE)
files <- dir(here("SCIP_1B_data_ANON"), "*.csv")
d <- tibble(fname = files) %>%
mutate(id = 1:n()) %>% # adds index to keep track of data frames
split(.$id) %>% # splits into list of data frames
map_df(function (x) {  # defines function to run on each data frame
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trialName", "jars")) %>%
mutate(response = ifelse(response=="On",
"left",ifelse(response=="Off","right","NA"))) %>%
mutate(trialType = "critical",
trialType = ifelse(str_detect(trialName, "G"), "gen", trialType),
trialType = ifelse(str_detect(trialName, "R"), "recap", trialType)) %>%
mutate(trialName = str_replace(trialName, ":purple",""),
jars = str_replace(jars, "_1", ""),
list = as.numeric(str_replace(str_replace(list, "SCIP_1B_List-", ""),
"_ANdata.csv")),
id = str_replace(str_replace(id, "SCIP_1B_List-", ""),
"_ANdata.csv"))
# Still TODO:
# (0) replace 'G2:purple' value in trialName column with 'G2'
# (a) get rid of "_1" suffix in jars column
# (b) clean up 'list' values to contain just numbers 1-16
# (c) order data by ascending list number (currently out of order)
# (d) assign subjectID to participants following ascending list order
# (d) add coumn with correct values for a given trial given list from key.csv
# (e) add accuracy column (if response = correct, 1, else 0)
})
knitr::opts_chunk$set(echo = TRUE)
files <- dir(here("SCIP_1B_data_ANON"), "*.csv")
d <- tibble(fname = files) %>%
mutate(id = 1:n()) %>% # adds index to keep track of data frames
split(.$id) %>% # splits into list of data frames
map_df(function (x) {  # defines function to run on each data frame
read_csv(here("SCIP_1B_data_ANON", x$fname)) %>%
select(ends_with("_1"), -contains("timing")) %>%
mutate(list = x$fname) %>%
mutate(id = str_c(list,"-",as.character(1:n()))) %>%
pivot_longer(names_to = "trial",
values_to = "response", cols = c(-list, -id)) %>%
separate(trial, sep = "-", into = c("trialName", "jars")) %>%
mutate(response = ifelse(response=="On",
"left",ifelse(response=="Off","right","NA"))) %>%
mutate(trialType = "critical",
trialType = ifelse(str_detect(trialName, "G"), "gen", trialType),
trialType = ifelse(str_detect(trialName, "R"), "recap", trialType)) %>%
mutate(trialName = str_replace(trialName, ":purple",""),
jars = str_replace(jars, "_1", ""),
list = as.numeric(str_replace(str_replace(list, "SCIP_1B_List-", ""),
"_ANdata.csv", "")),
id = str_replace(str_replace(id, "SCIP_1B_List-", ""),
"_ANdata.csv", ""))
# Still TODO:
# (0) replace 'G2:purple' value in trialName column with 'G2'
# (a) get rid of "_1" suffix in jars column
# (b) clean up 'list' values to contain just numbers 1-16
# (c) order data by ascending list number (currently out of order)
# (d) assign subjectID to participants following ascending list order
# (d) add coumn with correct values for a given trial given list from key.csv
# (e) add accuracy column (if response = correct, 1, else 0)
})
d
d$response
knitr::opts_chunk$set(echo = TRUE)
key <- read_csv("SCIP_1B_key.csv")
kry
key
d
knitr::opts_chunk$set(echo = TRUE)
keys <- read_csv("SCIP_1B_key.csv") %>%
rename(list = listNum) %>%
pivot_longer(names_to = trialName, values_to = correct_side, G2:R4)
knitr::opts_chunk$set(echo = TRUE)
keys <- read_csv("SCIP_1B_key.csv") %>%
rename(list = listNum) %>%
pivot_longer(names_to = "trialName", values_to = "correctSide", G2:R4)
keys
knitr::opts_chunk$set(echo = TRUE)
d <- left_join(d, keys) %>%
mutate(correct = response == correctSide)
d
knitr::opts_chunk$set(echo = TRUE)
ms <- d %>%
group_by(trialType, id) %>%
summarise(correct = mean(correct, na.rm=TRUE)) %>%
multi_boot_standard(col = "correct", na.rm = TRUE)
mns
ms
knitr::opts_chunk$set(echo = TRUE)
ggplot(ms, aes(x = trialType, y = mean)) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper))
knitr::opts_chunk$set(echo = TRUE)
ggplot(ms, aes(x = trialType, y = mean, col = trialType)) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper))
knitr::opts_chunk$set(echo = TRUE)
ggplot(ms, aes(x = trialType, y = mean, fill = trialType)) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
geom_hline(yintercept = .5, lty = 2)
d
d$list
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
